/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from 'react'
import { useGLTF, useAnimations, Trail } from '@react-three/drei'
import model from '../assets/3d/skykid.glb';
import { useFrame } from '@react-three/fiber'
import { Vector3, Euler, MathUtils } from 'three'
import { normalize } from 'three/src/math/MathUtils.js';


export default function SkyKid(props) {
    const group = useRef()
    const { nodes, materials, animations } = useGLTF(model)
    const { actions } = useAnimations(animations, group)
    const previousYRotation = useRef(0)

    useFrame((state) => {
        const camera = state.camera;

        if (!actions["flyAction"].isRunning()) {
            actions["flyAction"].play();
        }

        const offset = new Vector3(0, 0, -1);
        const worldPos = camera.localToWorld(offset.clone());

        if (group.current) {
            // Add bounce with sine wave
            const elapsedTime = state.clock.getElapsedTime();
            const bounceHeight = 0.03; // Adjust bounce amplitude
            const bounceSpeed = 1; // Adjust speed
            const bounce = Math.sin(elapsedTime * bounceSpeed) * bounceHeight;

            group.current.position.copy(worldPos);
            group.current.position.y += bounce;
        }

        // Determine rotation direction
        const currentY = camera.rotation.y;
        const prevY = previousYRotation.current;
        const deltaY = currentY - prevY;

        if (group.current) {
            group.current.rotation.copy(camera.rotation)

            if (deltaY > 0) {
                group.current.rotation.y = currentY + -1.5
            } else if (deltaY < 0) {
                group.current.rotation.y = currentY + 1.5
            } else {
                group.current.rotation.y = currentY + -1.5
            }
        }

        previousYRotation.current = currentY;

        const min = new Vector3(-5, 0, 2);
        const max = new Vector3(5, 0, 8);

        const normalized = new Vector3(
            (camera.position.x - min.x) / (max.x - min.x),
            0, // Y diabaikan karena tidak berubah
            (camera.position.z - min.z) / (max.z - min.z)
        ).clamp(new Vector3(0, 0, 0), new Vector3(1, 0, 1));

        // Call the callback with normalized values (or log it)
        // console.log(normalized.x.toPrecision(1), normalized.z.toPrecision(1));
        const normalizedXy = {
            x: normalized.x.toPrecision(1),
            y: normalized.z.toPrecision(1)
        }

        if ((normalizedXy.x == 0.5 && normalizedXy.y == 0.5) && props.onBoard) {
            props.setCurrentStage(1)
        } else if (normalizedXy.x == 0.8 && normalizedXy.y == 0.3) {
            props.setCurrentStage(2)
            props.setOnBoard(false);
        } else if (normalizedXy.x == 0.8 && normalizedXy.y == 0.0) {
            props.setCurrentStage(3)
        }
        else if (normalizedXy.x == 0.1 && normalizedXy.y == 0.0) {
            props.setCurrentStage(4)
        }
        else if (normalizedXy.x == 0.1 && normalizedXy.y == 0.2) {
            props.setCurrentStage(5)
            props.setOnBoard(false);
        }
        else if ((normalizedXy.x == 0.5 && normalizedXy.y == 0.5) && !props.onBoard) {
            props.setCurrentStage(6)
        }
        else {
            props.setCurrentStage(null)
        }

    });



    return (
        <Trail
            width={0.5}
            length={1}
            decay={0.7}
            color={'#ffffff'}
            attenuation={(t) => t * t}
        >
            <group ref={group} {...props} dispose={null}>
                <group name="Scene">
                    <group
                        name="skykid"
                        position={[-0.024, 5.406, 1.874]}
                        rotation={[-1.808, 0, 0]}
                        scale={0.023}>
                        <group name="sky_pray_with_texturefbx" rotation={[Math.PI / 2, 0, 0]}>
                            <group name="RootNode">
                                <group name="body_dress1">
                                    <group name="DRESS_POSW_A" position={[0, -135.014, 0]} />
                                    <group name="Hand_A_L" position={[0, -135.014, 0]}>
                                        <mesh
                                            name="Hand_A_L_body_dress_0"
                                            castShadow
                                            receiveShadow
                                            geometry={nodes.Hand_A_L_body_dress_0.geometry}
                                            material={materials.body_dress}
                                            rotation={[0.02, 0.049, -0.312]}
                                        />
                                    </group>
                                    <group name="Hand_A_Right" position={[0, -135.014, 0]} />
                                    <group name="head" position={[0, -135.014, 0]}>
                                        <mesh
                                            name="head_body_dress_0"
                                            castShadow
                                            receiveShadow
                                            geometry={nodes.head_body_dress_0.geometry}
                                            material={materials.body_dress}
                                        />
                                    </group>
                                    <group name="Leg_L" position={[0, -135.014, 0]}>
                                        <mesh
                                            name="Leg_L_body_dress_0"
                                            castShadow
                                            receiveShadow
                                            geometry={nodes.Leg_L_body_dress_0.geometry}
                                            material={materials.body_dress}
                                        />
                                    </group>
                                    <group name="Leg_R" position={[0, -135.014, 0]}>
                                        <mesh
                                            name="Leg_R_body_dress_0"
                                            castShadow
                                            receiveShadow
                                            geometry={nodes.Leg_R_body_dress_0.geometry}
                                            material={materials.body_dress}
                                        />
                                    </group>
                                    <group name="mask" position={[0, -135.014, 0]}>
                                        <mesh
                                            name="mask_body_dress_0"
                                            castShadow
                                            receiveShadow
                                            geometry={nodes.mask_body_dress_0.geometry}
                                            material={materials.body_dress}
                                        />
                                    </group>
                                    <group name="pant2" position={[0, -135.014, 0]} />
                                    <group name="pant2001" position={[0, -135.014, 0]} />
                                </group>
                                <group name="doupeng_hair_ling">
                                    <group name="CHIBANG007" position={[0, -135.014, 0]}>
                                        <mesh
                                            name="CHIBANG007_doupeng_haor_ling001_0"
                                            castShadow
                                            receiveShadow
                                            geometry={nodes.CHIBANG007_doupeng_haor_ling001_0.geometry}
                                            material={materials['doupeng_haor_ling.001']}
                                            morphTargetDictionary={
                                                nodes.CHIBANG007_doupeng_haor_ling001_0.morphTargetDictionary
                                            }
                                            morphTargetInfluences={
                                                nodes.CHIBANG007_doupeng_haor_ling001_0.morphTargetInfluences
                                            }
                                        />
                                    </group>
                                    <group name="CHIBANG012" position={[0, -135.014, 0]} />
                                    <group name="Cylinder015" position={[0, -135.014, 0]} />
                                    <group name="hair_pray" position={[0, -135.014, 0]} />
                                    <group name="Plane001" position={[74.607, -331.316, 27.756]} />
                                </group>
                                <group name="group">
                                    <group name="eye_L" position={[0, -135.014, 0]}>
                                        <mesh
                                            name="eye_L_eyes_0"
                                            castShadow
                                            receiveShadow
                                            geometry={nodes.eye_L_eyes_0.geometry}
                                            material={materials.eyes}
                                        />
                                    </group>
                                    <group name="eye_R" position={[0, -135.014, 0]}>
                                        <mesh
                                            name="eye_R_eyes_0"
                                            castShadow
                                            receiveShadow
                                            geometry={nodes.eye_R_eyes_0.geometry}
                                            material={materials.eyes}
                                        />
                                    </group>
                                </group>
                            </group>
                        </group>
                    </group>
                    <group
                        name="hair"
                        position={[7.228, -3.901, -1.263]}
                        rotation={[-1.808, 0, 0]}
                        scale={16.557}>
                        <group name="def2ddd0dd0248a080ecaa118021f3fbobjcleanermaterialmergergle">
                            <mesh
                                name="Object_2"
                                castShadow
                                receiveShadow
                                geometry={nodes.Object_2.geometry}
                                material={materials.material_0}
                                position={[-0.423, -0.254, -1.285]}
                                rotation={[0, -0.002, -2.925]}
                                scale={1.153}
                            />
                        </group>
                    </group>
                    <group
                        name="Wind"
                        position={[0.047, 14.956, -12.501]}
                        rotation={[2.471, 0, 0]}
                        scale={1.897}
                    />
                </group>
            </group>
        </Trail>
    )
}

useGLTF.preload(model)
