/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: kenchoo (https://sketchfab.com/kenchoo)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/cownose-ray-c7c51649007e4afba58416b15d891bf4
Title: Cownose Ray
*/

import React, { useRef } from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'
import model from '../assets/3d/ray.glb';
import { useFrame } from '@react-three/fiber'
import { Vector3 } from 'three'

export default function Ray(props) {
    const group = useRef()
    const { nodes, materials, animations } = useGLTF(model)
    const { actions } = useAnimations(animations, group)

    const screenPosition = new Vector3(0, 0.5, 0)
    // Parameters for the circular movement
    const radius = 4  // Radius of the circle
    const speed = 0.2 // Speed of the rotation (radians per frame)

    useFrame((state, delta) => {

        // Ensure the animation is playing
        if (!actions["Swim_F_IP"].isRunning()) {
            actions["Swim_F_IP"].play();
        }

        // Get the current time to create a smooth loop for the animation
        const time = state.clock.elapsedTime;

        // Calculate the new position on the circle using sine and cosine
        // Reversed the signs for opposite direction (clockwise to counterclockwise or vice versa)
        const x = screenPosition.x + radius * Math.cos(time * speed); // Negative for reversed motion
        const z = screenPosition.z + radius * Math.sin(time * speed); // Negative for reversed motion

        // Update the model's position
        if (group.current) {
            group.current.position.set(x, screenPosition.y, z);
        }

        // Optional: If you want the model to face the center of the circle, we reverse the direction as well
        if (group.current) {
            const lookAtPos = screenPosition.clone(); // Position to face towards
            group.current.lookAt(lookAtPos);
        }
    });


    return (
        <group ref={group} {...props} dispose={null}>
            <group name="Sketchfab_Scene">
                <group name="Sketchfab_model" rotation={[-Math.PI / 2, 0, 0]}>
                    <group name="root">
                        <group name="GLTF_SceneRootNode" rotation={[Math.PI / 2, 0, 0]}>
                            <group name="Cownose_Ray_Rig_42">
                                <group name="GLTF_created_0">
                                    <primitive object={nodes.GLTF_created_0_rootJoint} />
                                    <skinnedMesh
                                        name="Object_7"
                                        geometry={nodes.Object_7.geometry}
                                        material={materials.lambert1}
                                        skeleton={nodes.Object_7.skeleton}
                                    />
                                    <skinnedMesh
                                        name="Object_8"
                                        geometry={nodes.Object_8.geometry}
                                        material={materials['Material.001']}
                                        skeleton={nodes.Object_8.skeleton}
                                    />
                                    <skinnedMesh
                                        name="Object_9"
                                        geometry={nodes.Object_9.geometry}
                                        material={materials['Material.002']}
                                        skeleton={nodes.Object_9.skeleton}
                                    />
                                    <group name="Cownose_Ray_41" />
                                </group>
                            </group>
                        </group>
                    </group>
                </group>
            </group>
        </group>
    )
}

useGLTF.preload(model)
